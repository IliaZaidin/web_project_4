!function(){"use strict";function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var e=function(){function e(t,n,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),this._text=t.card_title,this._link=t.card_link,this._newCard=n.querySelector(".picture-grid__item").cloneNode(!0),this._cardTitle=this._newCard.querySelector(".picture-grid__title"),this._cardPicture=this._newCard.querySelector(".picture-grid__img"),this._handleCardClick=r}var n,r;return n=e,(r=[{key:"_setEventListeners",value:function(){var t=this;this._newCard.querySelector(".picture-grid__like").addEventListener("click",(function(t){t.target.classList.toggle("picture-grid__like_active")})),this._newCard.querySelector(".picture-grid__delete").addEventListener("click",(function(e){t._newCard.remove(),t._newCard=null})),this._newCard.querySelector(".picture-grid__img").addEventListener("click",(function(e){t._handleCardClick(t._link,t._text)}))}},{key:"_presetNewCard",value:function(){this._cardTitle.textContent=this._text,this._cardPicture.src=this._link,this._cardPicture.alt=this._text}},{key:"createCard",value:function(){return this._presetNewCard(),this._setEventListeners(),this._newCard}}])&&t(n.prototype,r),e}();function n(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var r=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=n,this._inputFields=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=n.querySelector(e.submitButtonSelector)}var e,r;return e=t,(r=[{key:"_disableSubmitButton",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled","")}},{key:"_enableSubmitButton",value:function(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled","")}},{key:"_toggleButtonState",value:function(){this._inputFields.some((function(t){return!t.validity.valid}))?this._disableSubmitButton(this._buttonElement):this._enableSubmitButton(this._buttonElement)}},{key:"_showInputError",value:function(t,e){t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(t,e){t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}},{key:"_checkInputValidity",value:function(t){var e=this._formElement.querySelector("#".concat(t.id,"_error"));t.validity.valid?this._hideInputError(t,e):this._showInputError(t,e)}},{key:"_setEventListeners",value:function(){var t=this;this._inputFields.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButtonState(t._inputFields,t._buttonElement)}))}))}},{key:"resetValidation",value:function(){var t=this;this._disableSubmitButton(),this._inputFields.forEach((function(e){var n=t._formElement.querySelector("#".concat(e.id,"_error"));t._hideInputError(e,n)}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&n(e.prototype,r),t}();function o(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var i=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._userName=document.querySelector(e.name),this._userJob=document.querySelector(e.job)}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,job:this._userJob.textContent}}},{key:"setUserInfo",value:function(t,e){this._userName.textContent=t,this._userJob.textContent=e}}])&&o(e.prototype,n),t}();function u(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function a(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var c=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popupItem=document.querySelector(e),this._popupCloseButton=this._popupItem.querySelector(".popup__close"),this._closeOnEscape=function(t){"Escape"===t.key&&n.close()}}var e,n;return e=t,(n=[{key:"open",value:function(){document.addEventListener("keyup",this._closeOnEscape),this._popupItem.classList.add("popup_is_opened")}},{key:"close",value:function(){document.removeEventListener("keyup",this._closeOnEscape),this._popupItem.classList.remove("popup_is_opened")}},{key:"setEventListeners",value:function(){var t=this;this._popupCloseButton.addEventListener("click",(function(e){t.close(),e.stopImmediatePropagation()})),this._popupItem.addEventListener("mousedown",(function(e){var n;(n=e.target.classList,function(t){if(Array.isArray(t))return u(t)}(n)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(n)||function(t,e){if(t){if("string"==typeof t)return u(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?u(t,e):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).includes("popup")&&t.close(),e.stopImmediatePropagation()}))}}])&&a(e.prototype,n),t}();function s(t){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},s(t)}function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=p(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},f.apply(this,arguments)}function p(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=y(t)););return t}function _(t,e){return _=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},_(t,e)}function d(t,e){if(e&&("object"===s(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function y(t){return y=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},y(t)}var h=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&_(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=y(r);if(o){var n=y(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return d(this,t)});function u(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._submitForm=t,n._fieldsData={},n._formElement=n._popupItem.querySelector(".form"),n._inputsList=n._popupItem.querySelectorAll(".form__input"),n}return e=u,(n=[{key:"close",value:function(){this._formElement.reset(),f(y(u.prototype),"close",this).call(this)}},{key:"_getInputValues",value:function(){var t=this;this._inputsList.forEach((function(e){t._fieldsData[e.name]=e.value}))}},{key:"setEventListeners",value:function(){var t=this;this._popupItem.addEventListener("submit",(function(e){t._getInputValues(),t._submitForm(e,t._fieldsData),e.stopImmediatePropagation()})),f(y(u.prototype),"setEventListeners",this).call(this)}}])&&l(e.prototype,n),u}(c);function m(t){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},m(t)}function v(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=w(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},b.apply(this,arguments)}function w(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=k(t)););return t}function g(t,e){return g=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},g(t,e)}function E(t,e){if(e&&("object"===m(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function k(t){return k=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},k(t)}var S=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&g(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=k(r);if(o){var n=k(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return E(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._popupTitle=document.querySelector(".popup__title_type_picture"),e._popupLink=document.querySelector(".popup__picture-link"),e}return e=u,(n=[{key:"open",value:function(t,e){this._popupLink.setAttribute("src",t),this._popupLink.setAttribute("alt",e),this._popupTitle.textContent=e,b(k(u.prototype),"open",this).call(this)}}])&&v(e.prototype,n),u}(c);function C(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var L=function(){function t(e,n){var r=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._items=r,this._renderer=o,this._classContainer=document.querySelector(n)}var e,n;return e=t,(n=[{key:"renderAll",value:function(){var t=this;this._items.forEach((function(e){t.addItem(e)}))}},{key:"addItem",value:function(t){this._classContainer.prepend(this._renderer(t))}}])&&C(e.prototype,n),t}(),O={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"form__submit_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"},j=document.querySelector(".profile__edit-button"),I=document.querySelector(".form__input_type_name"),P=document.querySelector(".form__input_type_about"),q=document.querySelector(".profile__add-button"),B=new r(O,document.querySelector(".form_type_profile")),x=new r(O,document.querySelector(".form_type_card")),R=new i({name:".profile__title",job:".profile__subtitle"}),A=new h((function(t,e){t.preventDefault(),R.setUserInfo(e.profile_name,e.profile_job),A.close()}),".popup_type_profile"),T=new h((function(t,e){t.preventDefault(),V.addItem(e),T.close()}),".popup_type_card"),V=new L({items:[{card_title:"Yosemite Valley",card_link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{card_title:"Lake Louise",card_link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{card_title:"Bald Mountains",card_link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{card_title:"Latemar",card_link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{card_title:"Vanoise National Park",card_link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{card_title:"Lago di Braies",card_link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:function(t){return new e(t,D,N).createCard()}},".picture-grid"),D=document.querySelector(".card-template").content,F=new S(".popup_type_picture");function N(t,e){F.open(t,e)}j.addEventListener("click",(function(){var t=R.getUserInfo(),e=t.name,n=t.job;I.value=e,P.value=n,B.resetValidation(),A.open()})),q.addEventListener("click",(function(){x.resetValidation(),T.open()})),window.onload=function(){V.renderAll(),x.enableValidation(),B.enableValidation(),F.setEventListeners(),A.setEventListeners(),T.setEventListeners()}}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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VUFBVyxvREFFYixDQUNFRixXQUFZLGNBQ1pFLFVBQVcsdURBRWIsQ0FDRUYsV0FBWSxpQkFDWkUsVUFBVywwREFFYixDQUNFRixXQUFZLFVBQ1pFLFVBQVcsbURBRWIsQ0FDRUYsV0FBWSx3QkFDWkUsVUFBVyxtREFFYixDQUNFRixXQUFZLGlCQUNaRSxVQUFXLGlEQ2pCMEMwRixTQW1CMUMsU0FBMEJxQixHQUV2QyxPQURhLElBQUl2SCxFQUFLdUgsRUFBVUMsRUFBY3JILEdBQ2xDc0gsZUFyQnlFLGlCQUNqRkQsRUFBZXJELFNBQVN6RCxjQUFjLGtCQUFrQmdILFFBQ3hEQyxFQUF1QixJQUFJakMsRUFBZSx1QkFzQmhELFNBQVN2RixFQUFnQjBGLEVBQU1DLEdBQzdCNkIsRUFBcUJDLEtBQUsvQixFQUFNQyxHQUtsQ1csRUFBa0IxRixpQkFBaUIsU0FBUyxXQUMxQyxNQUFvQmtELEVBQVM0RCxjQUF0QnpELEVBQVAsRUFBT0EsS0FBTUUsRUFBYixFQUFhQSxJQUNib0MsRUFBaUJsQixNQUFRcEIsRUFDekJ1QyxFQUFrQm5CLE1BQVFsQixFQUMxQnVDLEVBQXFCaUIsa0JBQ3JCZixFQUFvQmEsVUFLdEJoQixFQUFjN0YsaUJBQWlCLFNBQVMsV0FDdEMrRixFQUFrQmdCLGtCQUNsQlQsRUFBaUJPLFVBSW5CRyxPQUFPQyxPQUFTLFdBRWRWLEVBQWNXLFlBR2RuQixFQUFrQm9CLG1CQUNsQnJCLEVBQXFCcUIsbUJBR3JCUCxFQUFxQlEsb0JBQ3JCcEIsRUFBb0JvQixvQkFDcEJkLEVBQWlCYyxxQiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvcGFnZS9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKio9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgICBjb25zdHJ1Y3RvcihkYXRhLCB0ZW1wbGF0ZVNlbGVjdG9yLCBoYW5kbGVDYXJkQ2xpY2spIHtcclxuICAgICAgICB0aGlzLl90ZXh0ID0gZGF0YS5jYXJkX3RpdGxlO1xyXG4gICAgICAgIHRoaXMuX2xpbmsgPSBkYXRhLmNhcmRfbGluaztcclxuICAgICAgICB0aGlzLl9uZXdDYXJkID0gdGVtcGxhdGVTZWxlY3Rvci5xdWVyeVNlbGVjdG9yKCcucGljdHVyZS1ncmlkX19pdGVtJykuY2xvbmVOb2RlKHRydWUpO1xyXG4gICAgICAgIHRoaXMuX2NhcmRUaXRsZSA9IHRoaXMuX25ld0NhcmQucXVlcnlTZWxlY3RvcignLnBpY3R1cmUtZ3JpZF9fdGl0bGUnKTtcclxuICAgICAgICB0aGlzLl9jYXJkUGljdHVyZSA9IHRoaXMuX25ld0NhcmQucXVlcnlTZWxlY3RvcignLnBpY3R1cmUtZ3JpZF9faW1nJylcclxuICAgICAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XHJcbiAgICB9XHJcblxyXG4gICAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICAgIC8vVG9nZ2xlIGxpa2UgYnV0dG9uXHJcbiAgICAgICAgdGhpcy5fbmV3Q2FyZC5xdWVyeVNlbGVjdG9yKCcucGljdHVyZS1ncmlkX19saWtlJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBldmVudCA9PiB7XHJcbiAgICAgICAgICAgIGV2ZW50LnRhcmdldC5jbGFzc0xpc3QudG9nZ2xlKCdwaWN0dXJlLWdyaWRfX2xpa2VfYWN0aXZlJyk7XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgLy8gIERlbGV0ZSBjYXJkXHJcbiAgICAgICAgdGhpcy5fbmV3Q2FyZC5xdWVyeVNlbGVjdG9yKCcucGljdHVyZS1ncmlkX19kZWxldGUnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGV2ZW50ID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fbmV3Q2FyZC5yZW1vdmUoKTtcclxuICAgICAgICAgICAgdGhpcy5fbmV3Q2FyZCA9IG51bGw7XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgLy9FeHBhbmQgcGljdHVyZVxyXG4gICAgICAgIHRoaXMuX25ld0NhcmQucXVlcnlTZWxlY3RvcignLnBpY3R1cmUtZ3JpZF9faW1nJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBldmVudCA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayh0aGlzLl9saW5rLCB0aGlzLl90ZXh0KTtcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIF9wcmVzZXROZXdDYXJkKCkge1xyXG4gICAgICAgIHRoaXMuX2NhcmRUaXRsZS50ZXh0Q29udGVudCA9IHRoaXMuX3RleHQ7XHJcbiAgICAgICAgdGhpcy5fY2FyZFBpY3R1cmUuc3JjID0gdGhpcy5fbGluaztcclxuICAgICAgICB0aGlzLl9jYXJkUGljdHVyZS5hbHQgPSB0aGlzLl90ZXh0O1xyXG4gICAgfVxyXG5cclxuICAgIC8vQ3JlYXRlIGNhcmRcclxuICAgIGNyZWF0ZUNhcmQoKSB7XHJcbiAgICAgICAgdGhpcy5fcHJlc2V0TmV3Q2FyZCgpO1xyXG4gICAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX25ld0NhcmQ7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICBjb25zdHJ1Y3RvcihzZXR0aW5ncywgZm9ybUVsZW1lbnQpIHtcclxuICAgIHRoaXMuX2Zvcm1TZWxlY3RvciA9IHNldHRpbmdzLmZvcm1TZWxlY3RvcjsgICAgICAgICAgICAgICAgIC8vXCIuZm9ybVwiXHJcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gc2V0dGluZ3MuaW5wdXRTZWxlY3RvcjsgICAgICAgICAgICAgICAvL1wiLmZvcm1fX2lucHV0XCJcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gc2V0dGluZ3Muc3VibWl0QnV0dG9uU2VsZWN0b3I7IC8vXCIuZm9ybV9fc3VibWl0XCJcclxuICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSBzZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzOyAgIC8vXCJmb3JtX19zdWJtaXRfZGlzYWJsZWRcIlxyXG4gICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gc2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzOyAgICAgICAgICAgLy9cImZvcm1fX2lucHV0X3R5cGVfZXJyb3JcIlxyXG4gICAgdGhpcy5fZXJyb3JDbGFzcyA9IHNldHRpbmdzLmVycm9yQ2xhc3M7ICAgICAgICAgICAgICAgICAgICAgLy9cImZvcm1fX2Vycm9yX3Zpc2libGVcIlxyXG5cclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7XHJcbiAgICB0aGlzLl9pbnB1dEZpZWxkcyA9IEFycmF5LmZyb20odGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKSk7XHJcbiAgICB0aGlzLl9idXR0b25FbGVtZW50ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihzZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBfZGlzYWJsZVN1Ym1pdEJ1dHRvbigpIHtcclxuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIiwgXCJcIik7XHJcbiAgfVxyXG5cclxuICBfZW5hYmxlU3VibWl0QnV0dG9uKCkge1xyXG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLCBcIlwiKTtcclxuICB9XHJcblxyXG4gIF90b2dnbGVCdXR0b25TdGF0ZSAoKSB7ICBcclxuICAgIGNvbnN0IGhhc0ludmFsaWRJbnB1dCA9IHRoaXMuX2lucHV0RmllbGRzLnNvbWUoaW5wdXRGaWVsZCA9PiAhaW5wdXRGaWVsZC52YWxpZGl0eS52YWxpZCk7XHJcblxyXG4gICAgaWYgKGhhc0ludmFsaWRJbnB1dCkge1xyXG4gICAgICB0aGlzLl9kaXNhYmxlU3VibWl0QnV0dG9uKHRoaXMuX2J1dHRvbkVsZW1lbnQpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fZW5hYmxlU3VibWl0QnV0dG9uKHRoaXMuX2J1dHRvbkVsZW1lbnQpO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRGaWVsZCwgZXJyb3JFbGVtZW50KSB7XHJcbiAgICBpbnB1dEZpZWxkLmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGlucHV0RmllbGQudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcclxuICB9XHJcbiAgXHJcbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RmllbGQsIGVycm9yRWxlbWVudCkge1xyXG4gICAgaW5wdXRGaWVsZC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgfVxyXG4gIFxyXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRGaWVsZCkge1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRGaWVsZC5pZH1fZXJyb3JgKTtcclxuXHJcbiAgICBpZiAoaW5wdXRGaWVsZC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEZpZWxkLCBlcnJvckVsZW1lbnQpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRGaWVsZCwgZXJyb3JFbGVtZW50KTtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5faW5wdXRGaWVsZHMuZm9yRWFjaChpbnB1dEZpZWxkID0+IHtcclxuICAgICAgaW5wdXRGaWVsZC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEZpZWxkKTtcclxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSh0aGlzLl9pbnB1dEZpZWxkcywgdGhpcy5fYnV0dG9uRWxlbWVudCk7XHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gIH1cclxuICBcclxuICByZXNldFZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl9kaXNhYmxlU3VibWl0QnV0dG9uKCk7XHJcbiAgICB0aGlzLl9pbnB1dEZpZWxkcy5mb3JFYWNoKGlucHV0RmllbGQgPT4ge1xyXG4gICAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dEZpZWxkLmlkfV9lcnJvcmApO1xyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEZpZWxkLCBlcnJvckVsZW1lbnQpO1xyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xyXG4gICAgY29uc3RydWN0b3IodXNlckRhdGEpIHtcclxuICAgICAgICB0aGlzLl91c2VyTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodXNlckRhdGEubmFtZSk7XHJcbiAgICAgICAgdGhpcy5fdXNlckpvYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodXNlckRhdGEuam9iKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRVc2VySW5mbygpIHtcclxuICAgICAgICByZXR1cm4geyBuYW1lOiB0aGlzLl91c2VyTmFtZS50ZXh0Q29udGVudCwgam9iOiB0aGlzLl91c2VySm9iLnRleHRDb250ZW50IH07XHJcbiAgICB9XHJcblxyXG4gICAgc2V0VXNlckluZm8obmFtZSwgam9iKSB7XHJcbiAgICAgICAgdGhpcy5fdXNlck5hbWUudGV4dENvbnRlbnQgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMuX3VzZXJKb2IudGV4dENvbnRlbnQgPSBqb2I7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBJdGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9wb3B1cENsb3NlQnV0dG9uID0gdGhpcy5fcG9wdXBJdGVtLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fY2xvc2UnKTtcclxuICAgICAgICB0aGlzLl9jbG9zZU9uRXNjYXBlID0gKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChldmVudC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIG9wZW4oKSB7XHJcbiAgICAgICAgLy9hZGQgY2xvc2Ugb24gZXNjYXBlIGV2ZW50IGxpc3RlbmVyXHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLl9jbG9zZU9uRXNjYXBlKTtcclxuXHJcbiAgICAgICAgdGhpcy5fcG9wdXBJdGVtLmNsYXNzTGlzdC5hZGQoJ3BvcHVwX2lzX29wZW5lZCcpO1xyXG4gICAgfVxyXG5cclxuICAgIGNsb3NlKCkge1xyXG4gICAgICAgIC8vcmVtb3ZlIGNsb3NlIG9uIGVzY2FwZSBldmVudCBsaXN0ZW5lclxyXG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleXVwJywgdGhpcy5fY2xvc2VPbkVzY2FwZSk7XHJcblxyXG4gICAgICAgIHRoaXMuX3BvcHVwSXRlbS5jbGFzc0xpc3QucmVtb3ZlKCdwb3B1cF9pc19vcGVuZWQnKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICAvL2Nsb3NlIG9uIGJ1dHRvbiBjbGlja1xyXG4gICAgICAgIHRoaXMuX3BvcHVwQ2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICAgICAgICBldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICAvL2Nsb3NlIG9uIG92ZXJsYXkgY2xpY2tcclxuICAgICAgICB0aGlzLl9wb3B1cEl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChbLi4uZXZlbnQudGFyZ2V0LmNsYXNzTGlzdF0uaW5jbHVkZXMoJ3BvcHVwJykpXHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgICAgIGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3RvcihzdWJtaXRGb3JtLCBwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICAgICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0Rm9ybSA9IHN1Ym1pdEZvcm07XHJcbiAgICAgICAgdGhpcy5fZmllbGRzRGF0YSA9IHt9O1xyXG4gICAgICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gdGhpcy5fcG9wdXBJdGVtLnF1ZXJ5U2VsZWN0b3IoJy5mb3JtJyk7XHJcbiAgICAgICAgdGhpcy5faW5wdXRzTGlzdCA9IHRoaXMuX3BvcHVwSXRlbS5xdWVyeVNlbGVjdG9yQWxsKFwiLmZvcm1fX2lucHV0XCIpO1xyXG4gICAgfVxyXG5cclxuICAgIGNsb3NlKCkge1xyXG4gICAgICAgIHRoaXMuX2Zvcm1FbGVtZW50LnJlc2V0KCk7XHJcbiAgICAgICAgc3VwZXIuY2xvc2UoKTtcclxuICAgIH1cclxuXHJcbiAgICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICAgICAgdGhpcy5faW5wdXRzTGlzdC5mb3JFYWNoKGlucHV0ID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fZmllbGRzRGF0YVtpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgLy9zdWJtaXQgZm9ybVxyXG4gICAgICAgIHRoaXMuX3BvcHVwSXRlbS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKTtcclxuICAgICAgICAgICAgdGhpcy5fc3VibWl0Rm9ybShldmVudCwgdGhpcy5fZmllbGRzRGF0YSk7XHJcbiAgICAgICAgICAgIGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IgKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgICAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9wb3B1cFRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX190aXRsZV90eXBlX3BpY3R1cmUnKTtcclxuICAgICAgICB0aGlzLl9wb3B1cExpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3BpY3R1cmUtbGluaycpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vZXhwYW5kIHBpY3R1cmVcclxuICAgIG9wZW4obGluaywgdGV4dCkge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwTGluay5zZXRBdHRyaWJ1dGUoJ3NyYycsIGxpbmspO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwTGluay5zZXRBdHRyaWJ1dGUoJ2FsdCcsIHRleHQpO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwVGl0bGUudGV4dENvbnRlbnQgPSB0ZXh0O1xyXG4gICAgICAgIHN1cGVyLm9wZW4oKTtcclxuICAgIH1cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xyXG4gICAgY29uc3RydWN0b3Ioe2l0ZW1zLCByZW5kZXJlcn0sIGNsYXNzU2VsZWN0b3IpIHtcclxuICAgICAgICB0aGlzLl9pdGVtcyA9IGl0ZW1zO1xyXG4gICAgICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICAgICAgdGhpcy5fY2xhc3NDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNsYXNzU2VsZWN0b3IpO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlckFsbCgpIHtcclxuICAgICAgICB0aGlzLl9pdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmFkZEl0ZW0oaXRlbSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkSXRlbShpdGVtKSB7XHJcbiAgICAgICAgdGhpcy5fY2xhc3NDb250YWluZXIucHJlcGVuZCh0aGlzLl9yZW5kZXJlcihpdGVtKSk7XHJcbiAgICB9XHJcbn0iLCIvKio9PT09PT09PT09PT09PT09PT09PT09PSBjb25zdGFudHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbmV4cG9ydCBjb25zdCBzZXR0aW5ncyA9IHtcclxuICBmb3JtU2VsZWN0b3I6IFwiLmZvcm1cIixcclxuICBpbnB1dFNlbGVjdG9yOiBcIi5mb3JtX19pbnB1dFwiLFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5mb3JtX19zdWJtaXRcIixcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcImZvcm1fX3N1Ym1pdF9kaXNhYmxlZFwiLFxyXG4gIGlucHV0RXJyb3JDbGFzczogXCJmb3JtX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgZXJyb3JDbGFzczogXCJmb3JtX19lcnJvcl92aXNpYmxlXCJcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGluaXRpYWxDYXJkcyA9IFtcclxuICB7XHJcbiAgICBjYXJkX3RpdGxlOiBcIllvc2VtaXRlIFZhbGxleVwiLFxyXG4gICAgY2FyZF9saW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL3lvc2VtaXRlLmpwZ1wiXHJcbiAgfSxcclxuICB7XHJcbiAgICBjYXJkX3RpdGxlOiBcIkxha2UgTG91aXNlXCIsXHJcbiAgICBjYXJkX2xpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGFrZS1sb3Vpc2UuanBnXCJcclxuICB9LFxyXG4gIHtcclxuICAgIGNhcmRfdGl0bGU6IFwiQmFsZCBNb3VudGFpbnNcIixcclxuICAgIGNhcmRfbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS9iYWxkLW1vdW50YWlucy5qcGdcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgY2FyZF90aXRsZTogXCJMYXRlbWFyXCIsXHJcbiAgICBjYXJkX2xpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGF0ZW1hci5qcGdcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgY2FyZF90aXRsZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcclxuICAgIGNhcmRfbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS92YW5vaXNlLmpwZ1wiXHJcbiAgfSxcclxuICB7XHJcbiAgICBjYXJkX3RpdGxlOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbiAgICBjYXJkX2xpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGFnby5qcGdcIlxyXG4gIH1cclxuXTtcclxuXHJcbmV4cG9ydCBjb25zdCBwcm9maWxlQnV0dG9uRWRpdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19lZGl0LWJ1dHRvbicpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZVBvcHVwTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mb3JtX19pbnB1dF90eXBlX25hbWUnKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVQb3B1cEFib3V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZvcm1fX2lucHV0X3R5cGVfYWJvdXQnKTtcclxuZXhwb3J0IGNvbnN0IGNhcmRCdXR0b25BZGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYWRkLWJ1dHRvbicpOyIsIi8qKj09PT09PT09PT09PT09PT09PT09PT09aW1wb3J0cyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5pbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xyXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3JcIjtcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm1cIjtcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlXCI7XHJcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcclxuaW1wb3J0IHsgc2V0dGluZ3MsIGluaXRpYWxDYXJkcywgcHJvZmlsZUJ1dHRvbkVkaXQsIHByb2ZpbGVQb3B1cE5hbWUsIHByb2ZpbGVQb3B1cEFib3V0LCBjYXJkQnV0dG9uQWRkIH0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5cclxuLyoqPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IENsYXNzZXMgSW5zdGFuY2VzPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbmNvbnN0IHByb2ZpbGVGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3Ioc2V0dGluZ3MsIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mb3JtX3R5cGVfcHJvZmlsZScpKTtcclxuY29uc3QgY2FyZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihzZXR0aW5ncywgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZvcm1fdHlwZV9jYXJkJykpO1xyXG5jb25zdCB1c2VyRGF0YSA9IG5ldyBVc2VySW5mbyh7IG5hbWU6ICcucHJvZmlsZV9fdGl0bGUnLCBqb2I6ICcucHJvZmlsZV9fc3VidGl0bGUnIH0pO1xyXG5jb25zdCBwcm9maWxlRm9ybUluc3RhbmNlID0gbmV3IFBvcHVwV2l0aEZvcm0oc3VibWl0UHJvZmlsZUZvcm0sICcucG9wdXBfdHlwZV9wcm9maWxlJyk7XHJcbmNvbnN0IGNhcmRGb3JtSW5zdGFuY2UgPSBuZXcgUG9wdXBXaXRoRm9ybShzdWJtaXRDYXJkRm9ybSwgJy5wb3B1cF90eXBlX2NhcmQnKTtcclxuY29uc3QgaXRlbXNSZW5kZXJlciA9IG5ldyBTZWN0aW9uKHsgaXRlbXM6IGluaXRpYWxDYXJkcywgcmVuZGVyZXI6IG1ha2VDYXJkSW5zdGFuY2UgfSwgXCIucGljdHVyZS1ncmlkXCIpO1xyXG5jb25zdCBjYXJkVGVtcGxhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZC10ZW1wbGF0ZScpLmNvbnRlbnQ7XHJcbmNvbnN0IHBpY3R1cmVQb3B1cEluc3RhbmNlID0gbmV3IFBvcHVwV2l0aEltYWdlKCcucG9wdXBfdHlwZV9waWN0dXJlJyk7XHJcblxyXG4vKio9PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBmdW5jdGlvbnMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuLy91cGRhdGUgcHJvZmlsZVxyXG5leHBvcnQgZnVuY3Rpb24gc3VibWl0UHJvZmlsZUZvcm0oZXZlbnQsIGZpZWxkc0RhdGEpIHtcclxuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIHVzZXJEYXRhLnNldFVzZXJJbmZvKGZpZWxkc0RhdGEucHJvZmlsZV9uYW1lLCBmaWVsZHNEYXRhLnByb2ZpbGVfam9iKTtcclxuICBwcm9maWxlRm9ybUluc3RhbmNlLmNsb3NlKCk7XHJcbn1cclxuXHJcbi8vY3JlYXRlIG5ldyBjYXJkXHJcbmV4cG9ydCBmdW5jdGlvbiBzdWJtaXRDYXJkRm9ybShldmVudCwgZmllbGRzRGF0YSkge1xyXG4gIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgaXRlbXNSZW5kZXJlci5hZGRJdGVtKGZpZWxkc0RhdGEpO1xyXG4gIGNhcmRGb3JtSW5zdGFuY2UuY2xvc2UoKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWFrZUNhcmRJbnN0YW5jZShjYXJkRGF0YSkge1xyXG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChjYXJkRGF0YSwgY2FyZFRlbXBsYXRlLCBoYW5kbGVDYXJkQ2xpY2spO1xyXG4gIHJldHVybiBjYXJkLmNyZWF0ZUNhcmQoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlQ2FyZENsaWNrKGxpbmssIHRleHQpIHtcclxuICBwaWN0dXJlUG9wdXBJbnN0YW5jZS5vcGVuKGxpbmssIHRleHQpO1xyXG59XHJcblxyXG4vKj09PT09PT09PT09PT09PT09PT09IHByb2ZpbGUgZXZlbnQgbGlzdGVuZXJzID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xyXG4vL09wZW4gcHJvZmlsZSBlZGl0IGZvcm1cclxucHJvZmlsZUJ1dHRvbkVkaXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgY29uc3Qge25hbWUsIGpvYn0gPSB1c2VyRGF0YS5nZXRVc2VySW5mbygpO1xyXG4gIHByb2ZpbGVQb3B1cE5hbWUudmFsdWUgPSBuYW1lO1xyXG4gIHByb2ZpbGVQb3B1cEFib3V0LnZhbHVlID0gam9iO1xyXG4gIHByb2ZpbGVGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xyXG4gIHByb2ZpbGVGb3JtSW5zdGFuY2Uub3BlbigpO1xyXG59KVxyXG5cclxuLyo9PT09PT09PT09PT09PT09PT09IG5ldyBjYXJkIHBvcHVwIGV2ZW50IGxpc3RlbmVycyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cclxuLy9PcGVuIG5ldyBjYXJkIGZvcm1cclxuY2FyZEJ1dHRvbkFkZC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICBjYXJkRm9ybVZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKTtcclxuICBjYXJkRm9ybUluc3RhbmNlLm9wZW4oKTtcclxufSlcclxuXHJcbi8qKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBpbml0aWFsIHJ1bnMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXHJcbndpbmRvdy5vbmxvYWQgPSAoKSA9PiB7XHJcbiAgLy9jcmVhdGUgZmlyc3QgNiBjYXJkc1xyXG4gIGl0ZW1zUmVuZGVyZXIucmVuZGVyQWxsKCk7XHJcblxyXG4gIC8vZW5hYmxlIGZvcm1zIHZhbGlkYXRpb25cclxuICBjYXJkRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbiAgcHJvZmlsZUZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuICAvL2VuYWJsZSBldmVudCBsaXN0ZW5lcnNcclxuICBwaWN0dXJlUG9wdXBJbnN0YW5jZS5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIHByb2ZpbGVGb3JtSW5zdGFuY2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICBjYXJkRm9ybUluc3RhbmNlLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbn0iXSwibmFtZXMiOlsiQ2FyZCIsImRhdGEiLCJ0ZW1wbGF0ZVNlbGVjdG9yIiwiaGFuZGxlQ2FyZENsaWNrIiwidGhpcyIsIl90ZXh0IiwiY2FyZF90aXRsZSIsIl9saW5rIiwiY2FyZF9saW5rIiwiX25ld0NhcmQiLCJxdWVyeVNlbGVjdG9yIiwiY2xvbmVOb2RlIiwiX2NhcmRUaXRsZSIsIl9jYXJkUGljdHVyZSIsIl9oYW5kbGVDYXJkQ2xpY2siLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJ0YXJnZXQiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJyZW1vdmUiLCJ0ZXh0Q29udGVudCIsInNyYyIsImFsdCIsIl9wcmVzZXROZXdDYXJkIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiRm9ybVZhbGlkYXRvciIsInNldHRpbmdzIiwiZm9ybUVsZW1lbnQiLCJfZm9ybVNlbGVjdG9yIiwiZm9ybVNlbGVjdG9yIiwiX2lucHV0U2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX2Zvcm1FbGVtZW50IiwiX2lucHV0RmllbGRzIiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsIl9idXR0b25FbGVtZW50IiwiYWRkIiwic2V0QXR0cmlidXRlIiwicmVtb3ZlQXR0cmlidXRlIiwic29tZSIsImlucHV0RmllbGQiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2Rpc2FibGVTdWJtaXRCdXR0b24iLCJfZW5hYmxlU3VibWl0QnV0dG9uIiwiZXJyb3JFbGVtZW50IiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsImZvckVhY2giLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiVXNlckluZm8iLCJ1c2VyRGF0YSIsIl91c2VyTmFtZSIsImRvY3VtZW50IiwibmFtZSIsIl91c2VySm9iIiwiam9iIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwSXRlbSIsIl9wb3B1cENsb3NlQnV0dG9uIiwiX2Nsb3NlT25Fc2NhcGUiLCJrZXkiLCJjbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJpbmNsdWRlcyIsIlBvcHVwV2l0aEZvcm0iLCJzdWJtaXRGb3JtIiwiX3N1Ym1pdEZvcm0iLCJfZmllbGRzRGF0YSIsIl9pbnB1dHNMaXN0IiwicmVzZXQiLCJpbnB1dCIsInZhbHVlIiwiX2dldElucHV0VmFsdWVzIiwiUG9wdXBXaXRoSW1hZ2UiLCJfcG9wdXBUaXRsZSIsIl9wb3B1cExpbmsiLCJsaW5rIiwidGV4dCIsIlNlY3Rpb24iLCJjbGFzc1NlbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9pdGVtcyIsIl9yZW5kZXJlciIsIl9jbGFzc0NvbnRhaW5lciIsIml0ZW0iLCJhZGRJdGVtIiwicHJlcGVuZCIsInByb2ZpbGVCdXR0b25FZGl0IiwicHJvZmlsZVBvcHVwTmFtZSIsInByb2ZpbGVQb3B1cEFib3V0IiwiY2FyZEJ1dHRvbkFkZCIsInByb2ZpbGVGb3JtVmFsaWRhdG9yIiwiY2FyZEZvcm1WYWxpZGF0b3IiLCJwcm9maWxlRm9ybUluc3RhbmNlIiwiZmllbGRzRGF0YSIsInByZXZlbnREZWZhdWx0Iiwic2V0VXNlckluZm8iLCJwcm9maWxlX25hbWUiLCJwcm9maWxlX2pvYiIsImNhcmRGb3JtSW5zdGFuY2UiLCJpdGVtc1JlbmRlcmVyIiwiY2FyZERhdGEiLCJjYXJkVGVtcGxhdGUiLCJjcmVhdGVDYXJkIiwiY29udGVudCIsInBpY3R1cmVQb3B1cEluc3RhbmNlIiwib3BlbiIsImdldFVzZXJJbmZvIiwicmVzZXRWYWxpZGF0aW9uIiwid2luZG93Iiwib25sb2FkIiwicmVuZGVyQWxsIiwiZW5hYmxlVmFsaWRhdGlvbiIsInNldEV2ZW50TGlzdGVuZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==